import sys
import time
import select
import paramiko

def updateInEC2(event, context, filename):
        host = '23435.132475.43163234.36342' 
        i = 1
        if i == 1:    
	    try:
                ssh = paramiko.SSHClient()
                ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
                ssh.connect(host,username="root",password="raj123",port=22)
                print "Connected to %s" % host
            except paramiko.AuthenticationException:
                print "Authentication failed when connecting to %s" % host
                sys.exit(1)


	build_s3_command="aws s3 cp s3://raj-bucket-1123123/%s  /tmp/ec2-folder" % filename
	# Send the command (non-blocking)
        stdin, stdout, stderr = ssh.exec_command(build_s3_command)
        
	#
        # Disconnect from the host
        #
        print "Command done, closing SSH connection"
        ssh.close()

updateInEC2("test","test")

def lambda_handler(event, context):
    s3 = boto3.client("s3")

    if event:
        print("Event :", event)
        file_obj = event["Records"][0]
        filename = str(file_obj['s3']['object']['key'])
        print("Filename: ", filename)
        fileObj = s3.get_object(Bucket="raj-bucket-1123123", Key=filename)
        print("File Obj", fileObj)
        file_content = fileObj["Body"].read().decode('utf-8')
	
	updateInEC2("test","test", filename)


    return 'end'

